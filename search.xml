<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/12/25/hello-world/"/>
      <url>/2021/12/25/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>html制作烟花表白</title>
      <link href="/2021/12/23/html%E4%B8%8Ecss%EF%BC%8Cjs%E5%88%9B%E4%BD%9C%E6%B2%89%E6%B5%B8%E5%BC%8F%E7%83%9F%E8%8A%B1%EF%BC%8C%E5%8D%B3%E5%B0%86%E8%B7%A8%E5%B9%B4%EF%BC%8C%E5%BF%AB%E7%BB%99%E4%BD%A0%E4%BA%B2%E7%88%B1%E7%9A%84%E4%B8%80%E8%B5%B7%E7%9C%8B%E7%83%9F%E8%8A%B1%E5%90%A7_%E7%94%A8%E8%BF%99%E4%B8%AA%E8%A1%A8%E7%99%BD100%25%E6%88%90%E5%8A%9F%20(1)/"/>
      <url>/2021/12/23/html%E4%B8%8Ecss%EF%BC%8Cjs%E5%88%9B%E4%BD%9C%E6%B2%89%E6%B5%B8%E5%BC%8F%E7%83%9F%E8%8A%B1%EF%BC%8C%E5%8D%B3%E5%B0%86%E8%B7%A8%E5%B9%B4%EF%BC%8C%E5%BF%AB%E7%BB%99%E4%BD%A0%E4%BA%B2%E7%88%B1%E7%9A%84%E4%B8%80%E8%B5%B7%E7%9C%8B%E7%83%9F%E8%8A%B1%E5%90%A7_%E7%94%A8%E8%BF%99%E4%B8%AA%E8%A1%A8%E7%99%BD100%25%E6%88%90%E5%8A%9F%20(1)/</url>
      
        <content type="html"><![CDATA[<p><strong>什么，都快跨年了，还不快来带你的对象一起看烟花？</strong><br>先看看效果：<br><img src="https://img-blog.csdnimg.cn/45c1812ea1cb4fa28c09f020598f1469.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2YeiInuWKqOS5vuWdpA==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>下面是视频效果：<br>[video(video-bX559Lqi-1640263872238)(type-bilibili)(url-<a href="https://player.bilibili.com/player.html?aid=507552789)(image-https://img-blog.csdnimg.cn/img_convert/47c5ca51ab2bd8c2edeaac439c37a869.png)(title-html%E6%89%93%E9%80%A0%E6%B5%AA%E6%BC%AB%E7%83%9F%E8%8A%B1)%5D">https://player.bilibili.com/player.html?aid=507552789)(image-https://img-blog.csdnimg.cn/img_convert/47c5ca51ab2bd8c2edeaac439c37a869.png)(title-html打造浪漫烟花)]</a><br><strong>当然背景图片自己是可以添加制作的,点击屏幕就会有烟花的声音哦~</strong><br>下面上代码：<br>html:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;烟花&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        html,</span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        body &#123;</span><br><span class="line">            background-image: url(qv1.jpg);</span><br><span class="line">            background-size: 50% 50%;</span><br><span class="line">            background-size: 100%;</span><br><span class="line">            background-repeat: no-repeat;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .demo &#123;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100%;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        h1 &#123;</span><br><span class="line">            margin: 175px auto 30px auto;</span><br><span class="line">            text-align: center;</span><br><span class="line">            font-family: <span class="string">&#x27;Roboto&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=<span class="string">&quot;demo&quot;</span>&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;fireworks.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(<span class="string">&#x27;.demo&#x27;</span>).fireworks(&#123;</span><br><span class="line">            sound: <span class="literal">true</span>,</span><br><span class="line">            opacity: 0.8,</span><br><span class="line">            width: <span class="string">&#x27;100%&#x27;</span>,</span><br><span class="line">            height: <span class="string">&#x27;100%&#x27;</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>js这里采用百度网盘形式<br><a href="https://pan.baidu.com/s/1QzSpJgfggTfJJ4YR6UxXiA">链接</a><br>提取码：6666</p><p><strong>如果喜欢的话，记得要给小舞点点关注收藏哦~</strong></p>]]></content>
      
      
      <categories>
          
          <category> 前端知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> js </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java包装类</title>
      <link href="/2021/12/23/javase%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E5%8C%85%E8%A3%85%E7%B1%BB%E5%8F%8A%E6%97%A5%E5%8E%86%E7%B1%BB%E8%AF%A6%E7%BB%86%E6%80%BB%E7%BB%93/"/>
      <url>/2021/12/23/javase%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E5%8C%85%E8%A3%85%E7%B1%BB%E5%8F%8A%E6%97%A5%E5%8E%86%E7%B1%BB%E8%AF%A6%E7%BB%86%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>@<a href="%E5%8C%85%E8%A3%85%E7%B1%BB%E5%8F%8A%E5%85%B6%E6%97%A5%E6%9C%9F%E7%B1%BB%E8%AF%A6%E7%BB%86%E6%80%BB%E7%BB%93%EF%BC%8C%E5%B8%8C%E6%9C%9B%E5%A4%A7%E5%AE%B6%E8%83%BD%E7%BB%99%E5%B0%8F%E5%A7%90%E5%A7%90%E4%B8%89%E8%81%94%E6%94%AF%E6%8C%81%EF%BC%8C%E6%84%9F%E8%B0%A2%E5%A4%A7%E5%AE%B6">TOC</a></p><h1 id="1-基本类型包装类"><a href="#1-基本类型包装类" class="headerlink" title="1. 基本类型包装类"></a>1. 基本类型包装类</h1><h2 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h2><p><strong>它用于基本数据类型与字符串之间的转换</strong><br><img src="https://img-blog.csdnimg.cn/3e4980884e28445db63980b8eb7ea030.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5rC05YWs5a2Q,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>举例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IntegerDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断数据是否在int范围内</span></span><br><span class="line">        System.out.println(Integer.MAX_VALUE);<span class="comment">//最大范围</span></span><br><span class="line">        System.out.println(Integer.MIN_VALUE);<span class="comment">//最小范围</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-2-Integer类的概述与使用"><a href="#1-2-Integer类的概述与使用" class="headerlink" title="1.2 Integer类的概述与使用"></a>1.2 Integer类的概述与使用</h2><p>这里只介绍Integer,其他的可自行查看帮助文档。<br><img src="https://img-blog.csdnimg.cn/ef0517f8d9d2439fade46f3afd6d8a55.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2YeiInuWKqOS5vuWdpA==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>那么我们重点看构造方法<img src="https://img-blog.csdnimg.cn/f7e51722ffef480690885c92ec9cfaa4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2YeiInuWKqOS5vuWdpA==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>它的构造方法，建议以后用Integer的方法，用<code>valueOf（）</code>来使用<br>过时的方法当然也可以用，不过它会提示已经过时,如下图所示：<img src="https://img-blog.csdnimg.cn/c3abd2b968e04b88bba52250a3eca784.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2YeiInuWKqOS5vuWdpA==,size_20,color_FFFFFF,t_70,g_se,x_16"><br>但是如果是字符串类型的字母，就会运行错误，它识别的是字符串类型的数字</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Integer i3=<span class="keyword">new</span> Integer(<span class="string">&quot;asd&quot;</span>);<span class="comment">//这里就会运行错误</span></span><br></pre></td></tr></table></figure><p>不建议使用上面的两种形式，建议使用这种格式：<code>Integer i1=Integer.valueOf();</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IntegerDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Integer i1=Integer.valueOf(<span class="number">123</span>);<span class="comment">//数字类型</span></span><br><span class="line">        System.out.println(i1);</span><br><span class="line">        Integer i2=Integer.valueOf(<span class="string">&quot;123&quot;</span>);<span class="comment">//字符串类型</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="1-3-int和String的相互转换"><a href="#1-3-int和String的相互转换" class="headerlink" title="1.3 int和String的相互转换"></a>1.3 int和String的相互转换</h2><ul><li><strong>简单的方式</strong>：”字符串”+数字，得出来的是拼接的字符串</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> number=<span class="number">100</span>;</span><br><span class="line">String s1=<span class="string">&quot;&quot;</span>+number;</span><br></pre></td></tr></table></figure><ul><li><strong>方式二官方版</strong>：<br><img src="https://img-blog.csdnimg.cn/fb61ae3bb40c44ba97bcc66d61021945.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2YeiInuWKqOS5vuWdpA==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述">这里可以用官方文档给我们提示的进行，这里用的是<code>valueOf</code>进行转换</li><li><strong>数字转换为字符串</strong>：<code> String s1=String.valueOf(num);</code></li><li><strong>字符串转换为数字</strong>：</li></ul><p><strong>方式一</strong>：先将String转换为Integer再转化为int<br>String—&gt;Integer—&gt;int<br><strong>方式二</strong>：Integer.parseInt();</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IntegerDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> num=<span class="number">100</span>;</span><br><span class="line">       String s1=String.valueOf(num);</span><br><span class="line">       <span class="comment">//int转换为字符串类型</span></span><br><span class="line">        System.out.println(s1);</span><br><span class="line">        System.out.println(<span class="string">&quot;----------&quot;</span>);</span><br><span class="line">        <span class="comment">//字符串转换为int</span></span><br><span class="line">        String s2=<span class="string">&quot;100&quot;</span>;</span><br><span class="line">       <span class="comment">// 方式一:</span></span><br><span class="line">        <span class="comment">//String---&gt;Integer---&gt;int</span></span><br><span class="line">        Integer i1=Integer.valueOf(s2);</span><br><span class="line">        <span class="comment">//通过帮助文档发现，</span></span><br><span class="line">        <span class="comment">// intValue()用来返回Integer</span></span><br><span class="line">        <span class="comment">// 作为int的值，正好符合要求</span></span><br><span class="line">        <span class="keyword">int</span> x=i1.intValue();<span class="comment">//返回值用int接收</span></span><br><span class="line">        System.out.println(x);</span><br><span class="line">        <span class="comment">//方式二：使用parseInt静态方法</span></span><br><span class="line">        <span class="keyword">int</span> y=Integer.parseInt(s2);</span><br><span class="line">        System.out.println(y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-4-案例-字符串中数据排序"><a href="#1-4-案例-字符串中数据排序" class="headerlink" title="1.4 案例-字符串中数据排序"></a>1.4 案例-字符串中数据排序</h2><p><strong>需求</strong>：有一个字符串：”91 27 46 38 50”,请写程序最终输出的结果是：”27,38,46,50,91”.<br><strong>思路</strong>：<br><img src="https://img-blog.csdnimg.cn/1f691c006b8546b5af68219089732022.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2YeiInuWKqOS5vuWdpA==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/5ca3c4ebd66e4a46aa7b7175c39c6c24.png" alt="在这里插入图片描述"></p><p>代码展示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IntegerDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//定义字符串</span></span><br><span class="line">        String s=<span class="string">&quot;91 27 46 38 56&quot;</span>;</span><br><span class="line">        <span class="comment">//将字符串中数据抽离出来,以空格作为分割点</span></span><br><span class="line">        String[] s1 = s.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="comment">//定义一个int数组，用于存这些数据</span></span><br><span class="line">        <span class="keyword">int</span> []arr=<span class="keyword">new</span> <span class="keyword">int</span>[s1.length];<span class="comment">//以s1的长度</span></span><br><span class="line">        <span class="comment">//转换为int类型</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s1.length; i++) &#123;</span><br><span class="line">            arr[i] = Integer.parseInt(s1[i]);</span><br><span class="line">            <span class="comment">//赋值</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//进行排序</span></span><br><span class="line">        Arrays.sort(arr);</span><br><span class="line">        <span class="comment">//字符串拼拼接</span></span><br><span class="line">        StringBuilder sb=<span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i==arr.length-<span class="number">1</span>)&#123;</span><br><span class="line">                sb.append(arr[i]);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                sb.append(arr[i]).append(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        String result = sb.toString();</span><br><span class="line">        System.out.println(<span class="string">&quot;排序后的：&quot;</span>+ result);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-5-自动装箱和拆箱"><a href="#1-5-自动装箱和拆箱" class="headerlink" title="1.5 自动装箱和拆箱"></a>1.5 自动装箱和拆箱</h2><ul><li><strong>装箱：</strong> 把基本数据类型转换为对应包装类型</li><li><strong>拆箱：</strong> 把包装类型转换为基本数据类型<br>先看装箱：通过定义我们可以看出，装箱把基本数据类型转化为对应包装类型，例如：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Inter i=Integer.valueOf(<span class="number">100</span>);<span class="comment">//这里先把100转化为Inter类型，赋值</span></span><br><span class="line">Integer i1=<span class="number">100</span>;<span class="comment">//这里java5之后就在jdk内部</span></span><br><span class="line"><span class="comment">//已经潜移默化的为我们包装好了</span></span><br><span class="line"><span class="comment">//它等同于上步</span></span><br></pre></td></tr></table></figure><p>拆箱：与装箱执行相反的步骤</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Integer i1=<span class="number">100</span>;</span><br><span class="line"><span class="comment">//拆箱：转换为int型，用intValue()这个方法</span></span><br><span class="line"><span class="comment">//然后进行基本类型的运算后再赋值给i1</span></span><br><span class="line"><span class="comment">//完成自动拆箱</span></span><br><span class="line">i1=i1.intValue()+<span class="number">200</span>;<span class="comment">//最后赋值是自动装箱</span></span><br></pre></td></tr></table></figure><p>自动拆箱：省去了转化为int类型的基本数据类型，直接进行运算</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Integer i1=<span class="number">100</span>;</span><br><span class="line">i1+=<span class="number">200</span>;<span class="comment">//内部隐含了自动拆箱和自动装箱</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong><br>如果定义时，定义的<code>Integer i=null;</code>那么i进行运算时会运行错误，这里要注意，引用类型的最好要判断是否为<code>null</code>，<strong>只要是对象，就必须判断是否为空</strong></p><h1 id="2-Date类"><a href="#2-Date类" class="headerlink" title="2. Date类"></a>2. Date类</h1><p>要注意，Date类导包时要清楚自己导的哪个包<br><img src="https://img-blog.csdnimg.cn/d10c4e5a6f2044b492912305f14adc6f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2YeiInuWKqOS5vuWdpA==,size_12,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/f321758fc30b457fb5c2df4e7f276941.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2YeiInuWKqOS5vuWdpA==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>构造方法：<br>Date 代表了指定时间，精确到毫秒<br><img src="https://img-blog.csdnimg.cn/1fb6693078ac467e9021680bfd230cd0.png" alt="在这里插入图片描述"><br>举例：注意！在这里导入的util包下的<br><img src="https://img-blog.csdnimg.cn/8e96244978824807b7b49e6ea49bcdf4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2YeiInuWKqOS5vuWdpA==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Date d=<span class="keyword">new</span> Date();</span><br><span class="line">        <span class="comment">//按道理输出的应该是地址，结果输出了时间，因为重写了toString方法</span></span><br><span class="line">        System.out.println(d);</span><br><span class="line">        <span class="comment">//有参构造</span></span><br><span class="line">        <span class="keyword">long</span> data=<span class="number">1000</span>*<span class="number">60</span>*<span class="number">60</span>;<span class="comment">//毫秒*1000-&gt;秒-&gt;*60-&gt;分钟-&gt;*60-&gt;小时</span></span><br><span class="line">        Date d2=<span class="keyword">new</span> Date(data);</span><br><span class="line">        System.out.println(d2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">运行结果：</span><br><span class="line">Wed Dec <span class="number">15</span> <span class="number">17</span>:<span class="number">51</span>:<span class="number">04</span> CST <span class="number">2021</span></span><br><span class="line">Thu Jan <span class="number">01</span> 09:<span class="number">00</span>:<span class="number">00</span> CST <span class="number">1970</span><span class="comment">//其中09:00:00是时区</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-1-Date常用方法"><a href="#2-1-Date常用方法" class="headerlink" title="2.1 Date常用方法"></a>2.1 Date常用方法</h2><ul><li><code>public long getTime()</code> 获取的是日期对象，从1970年1月1日00：00：00到现在的毫秒</li><li><code>public void setTime(long time)</code> 设置时间，给的是毫秒值</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">getTime:</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Date d=<span class="keyword">new</span> Date();</span><br><span class="line">        <span class="comment">//获取时间</span></span><br><span class="line">        System.out.println(d.getTime()*<span class="number">1.0</span>/<span class="number">1000</span>/<span class="number">60</span>/<span class="number">60</span>/<span class="number">24</span>/<span class="number">365</span>+<span class="string">&quot;年&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">51.99024939979706年//从1970到现在</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">setTime</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Date d=<span class="keyword">new</span> Date();</span><br><span class="line">       <span class="keyword">long</span> date=<span class="number">1000</span>*<span class="number">60</span>*<span class="number">60</span>;</span><br><span class="line">       d.setTime(date);</span><br><span class="line">        System.out.println(d);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">运行结果：</span><br><span class="line">Thu Jan <span class="number">01</span> 09:<span class="number">00</span>:<span class="number">00</span> CST <span class="number">1970</span></span><br></pre></td></tr></table></figure><h1 id="3-SimpleDateFormat类"><a href="#3-SimpleDateFormat类" class="headerlink" title="3. SimpleDateFormat类"></a>3. SimpleDateFormat类</h1><p><strong>概述</strong></p><ul><li>SimpleDateFormat是一个<strong>具体</strong>的类，用于以区域设置敏感的<strong>方式格式化</strong>和<strong>解析日期</strong>。重点学习日期格式化和解析化</li><li> 日期和时间格式由日期和时间模式字符串指定，在日期和时间模式字符串中，从‘A’到‘Z’以及从‘a’到‘z’引号的字母被解释为表示日期或时间字符串的组件的模式字母</li></ul><p><strong>常用模式字母对应关系</strong></p><ul><li>y..年</li><li>M..月</li><li>d…天</li><li>H…时</li><li>m…分</li><li>s…秒</li></ul><p><strong>构造方法</strong><br><img src="https://img-blog.csdnimg.cn/c84e4c4081b547529e3b5f3d8c4e4546.png" alt="在这里插入图片描述"><br><strong>SimpleDateFormat格式化与解析日期</strong></p><ul><li>格式化（从Date到String）<code>public final String format(Date date)</code>:将日期格式化成日期/时间字符串</li><li>解析（从String到Date）<code>public Date parse(String souce)</code>:从给定字符串的开始解析文本以生成日期</li></ul><p><strong>举例</strong><br><strong>格式化</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleDateFormatDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//格式化</span></span><br><span class="line">        Date d=<span class="keyword">new</span> Date();</span><br><span class="line">        <span class="comment">//无参构造</span></span><br><span class="line">        <span class="comment">//先创建SimpleDateFormat类</span></span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat();</span><br><span class="line">        <span class="comment">//通过对象调用方法</span></span><br><span class="line">        String s = sdf.format(d);</span><br><span class="line">        System.out.println(s);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2021</span>/<span class="number">12</span>/<span class="number">15</span> 下午<span class="number">7</span>:<span class="number">11</span></span><br></pre></td></tr></table></figure><p>为了看起来更加方便，可以自己设置模式：传递参数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy年MM月dd日 HH:mm:ss&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">运行结果</span><br></pre></td></tr></table></figure><p><strong><img src="https://img-blog.csdnimg.cn/f6ea13255c4c4ee889225985733cefb7.png" alt="在这里插入图片描述"><br>解析</strong><br>要注意的点：字符串模式的格式要和传参一样<br><code>2021-12-15 12:00:00</code>要和<code>yyyy-MM-dd HH:mm:ss&quot;</code>格式对应，例如都需要<code>-</code>,在代码下面会提示异常，要抛出异常，快捷键<code>Alt+Enter</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleDateFormatDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ParseException </span>&#123;<span class="comment">//抛出异常</span></span><br><span class="line">        <span class="comment">//解析</span></span><br><span class="line">        Date d=<span class="keyword">new</span> Date();</span><br><span class="line">        String s=<span class="string">&quot;2021-12-15 12:00:00&quot;</span>;</span><br><span class="line">        <span class="comment">//先创建SimpleDateFormat类</span></span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);<span class="comment">//这里格式要和模式的一样</span></span><br><span class="line">        <span class="comment">//通过对象调用方法</span></span><br><span class="line">        Date ss = sdf.parse(s);</span><br><span class="line">        <span class="comment">//抛出异常Alt+Enter</span></span><br><span class="line">        System.out.println(ss);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-1-案例-日期工具类"><a href="#3-1-案例-日期工具类" class="headerlink" title="3.1 案例-日期工具类"></a>3.1 案例-日期工具类</h2><p><img src="https://img-blog.csdnimg.cn/5e92b0b99f1843848be589e8faef44fd.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20c710295ee34cad9ba440e973ddef53.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2YeiInuWKqOS5vuWdpA==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>工具类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">工具类：构造方法私有，成员静态</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateUtils</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">DateUtils</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    <span class="comment">//方法，把日期转化为指定格式的字符串</span></span><br><span class="line">    <span class="comment">//返回类型：String</span></span><br><span class="line">    <span class="comment">//参数：Date date,String format</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">dateTostring</span><span class="params">(Date date,String format)</span></span>&#123;</span><br><span class="line">        SimpleDateFormat sdf=<span class="keyword">new</span> SimpleDateFormat(format);</span><br><span class="line">        String s = sdf.format(date);</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//方法，把字符串转化为指定格式的日期</span></span><br><span class="line">    <span class="comment">//返回类型：Date</span></span><br><span class="line">    <span class="comment">//参数：String s,String format</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">stringTodate</span><span class="params">(String s1,String format)</span> <span class="keyword">throws</span> ParseException </span>&#123;</span><br><span class="line">        SimpleDateFormat sdf=<span class="keyword">new</span> SimpleDateFormat(format);</span><br><span class="line">       Date p = sdf.parse(s1);</span><br><span class="line">       <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleDateFormatDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ParseException </span>&#123;<span class="comment">//抛出异常</span></span><br><span class="line">        <span class="comment">//创建日期对象</span></span><br><span class="line">        Date d=<span class="keyword">new</span> Date();</span><br><span class="line">        <span class="comment">//调用方法</span></span><br><span class="line">        String s = DateUtils.dateTostring(d, <span class="string">&quot;yyyy年MM月dd日 HH:mm:ss&quot;</span>);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">        <span class="comment">//也可以拿到部分</span></span><br><span class="line">        String s1 = DateUtils.dateTostring(d, <span class="string">&quot;yyyy年MM月dd日&quot;</span>);</span><br><span class="line">        System.out.println(s1);</span><br><span class="line">        System.out.println(<span class="string">&quot;----以下是解析----&quot;</span>);</span><br><span class="line">        String s2=<span class="string">&quot;2021-12-15 00:00:00&quot;</span>;</span><br><span class="line">        Date date = DateUtils.stringTodate(s2, <span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">        System.out.println(date);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果:</p><p><img src="https://img-blog.csdnimg.cn/4192e094bf794f2aad1cfd990a060d1c.png" alt="在这里插入图片描述"></p><h1 id="4-Calendar类-日历"><a href="#4-Calendar类-日历" class="headerlink" title="4. Calendar类-日历"></a>4. Calendar类-日历</h1><p><strong>概述</strong></p><ul><li><p>Calendar为某一时刻和一组日历字段之间的转换提供了一些方法，并为操作日历字段提供了一些方法</p></li><li><p>Calendar提供了一个类方法getlnstance用于获取Calendar对象，其日历字段已使用当前日期和时间</p></li></ul><p><strong>初始化:</strong> <code>Calendar rightNow = Calendar.getInstance();</code></p><p><img src="https://img-blog.csdnimg.cn/d2a1892696f0489e8219fa12404b22a0.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2YeiInuWKqOS5vuWdpA==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/c4162840c2f641ae9ae19b8583f75492.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2YeiInuWKqOS5vuWdpA==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CalendarDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取对象</span></span><br><span class="line">        Calendar c = Calendar.getInstance();<span class="comment">//多态的形式</span></span><br><span class="line">        <span class="keyword">int</span> year = c.get(Calendar.YEAR);<span class="comment">//因为字段是静态修饰的，所以通过对象调用字段</span></span><br><span class="line">        <span class="comment">//即Calendar.YEAR</span></span><br><span class="line">        <span class="keyword">int</span> month = c.get(Calendar.MONTH)+<span class="number">1</span>;<span class="comment">//一定要注意，月份是从0开始的，要+1</span></span><br><span class="line">        <span class="keyword">int</span> date = c.get(Calendar.DATE);</span><br><span class="line">        System.out.println(year+<span class="string">&quot;年&quot;</span>+month+<span class="string">&quot;月&quot;</span>+date+<span class="string">&quot;日&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：这里的<br>月份是从0开始的，所以在使用时要+1</strong><br>运行结果：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2021</span>年<span class="number">12</span>月<span class="number">15</span>日</span><br></pre></td></tr></table></figure><h2 id="4-1-Calendar-的常用方法"><a href="#4-1-Calendar-的常用方法" class="headerlink" title="4.1 Calendar 的常用方法"></a>4.1 Calendar 的常用方法</h2><p><img src="https://img-blog.csdnimg.cn/3be171009cb14ea590e3d5c1e6361ec5.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2YeiInuWKqOS5vuWdpA==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>add()方法，由于在默认类中重写了方法，所以这里可以直接使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CalendarDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取对象</span></span><br><span class="line">        Calendar c = Calendar.getInstance();<span class="comment">//多态的形式</span></span><br><span class="line">        c.add(Calendar.YEAR,<span class="number">10</span>);<span class="comment">//在现在的基础上增加十年</span></span><br><span class="line">        c.add(Calendar.DATE,-<span class="number">5</span>);<span class="comment">//在原来的基础上-5天</span></span><br><span class="line">        <span class="keyword">int</span> year = c.get(Calendar.YEAR);<span class="comment">//因为字段是静态修饰的，所以通过对象调用字段</span></span><br><span class="line">        <span class="comment">//即Calendar.YEAR</span></span><br><span class="line">        <span class="keyword">int</span> month = c.get(Calendar.MONTH)+<span class="number">1</span>;<span class="comment">//一定要注意，月份是从0开始的，要+1</span></span><br><span class="line">        <span class="keyword">int</span> date = c.get(Calendar.DATE);</span><br><span class="line">        System.out.println(year+<span class="string">&quot;年&quot;</span>+month+<span class="string">&quot;月&quot;</span>+date+<span class="string">&quot;日&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：<br><img src="https://img-blog.csdnimg.cn/ae929da7f9984194a4ae4c0d4d38018c.png" alt="在这里插入图片描述"><br>set()方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CalendarDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取对象</span></span><br><span class="line">        Calendar c = Calendar.getInstance();<span class="comment">//多态的形式</span></span><br><span class="line">        c.set(<span class="number">2022</span>,<span class="number">11</span>,<span class="number">05</span>);<span class="comment">//这里11出来的结果会是12</span></span><br><span class="line">        <span class="keyword">int</span> year = c.get(Calendar.YEAR);<span class="comment">//因为字段是静态修饰的，所以通过对象调用字段</span></span><br><span class="line">        <span class="comment">//即Calendar.YEAR</span></span><br><span class="line">        <span class="keyword">int</span> month = c.get(Calendar.MONTH)+<span class="number">1</span>;<span class="comment">//一定要注意，月份是从0开始的，要+1</span></span><br><span class="line">        <span class="keyword">int</span> date = c.get(Calendar.DATE);</span><br><span class="line">        System.out.println(year+<span class="string">&quot;年&quot;</span>+month+<span class="string">&quot;月&quot;</span>+date+<span class="string">&quot;日&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：<br><img src="https://img-blog.csdnimg.cn/88e26bdb96704319be285ff8e5b496cd.png" alt="在这里插入图片描述"></p><blockquote><p>以上就是对知识点的总结，总结不容易，希望大家三联支持哦</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> javase </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java总结 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
